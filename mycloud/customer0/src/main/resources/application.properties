server.port=9010
#eureka.client.service-url.defaultZone=http://chen:chen@myEurekaServer1:9090/eureka/
spring.application.name=eureka-customer0
#management.endpoints.web.cors.allow-credentials=true
#开启所以的endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.boot.admin.client.url=http://localhost:9020



management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
#上报服务的真实健康状态 在client端配置：将自己真正的健康状态传播到server
eureka.client.healthcheck.enabled=true

#连接超时时间(ms)
ribbon.ConnectTimeout=1000
#业务逻辑超时时间(ms)
ribbon.ReadTimeout=2000
#ribbon.okhttp.enabled=true
#ribbon.eager-load.enabled=true

#同一台实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetries=1
#重试负载均衡其他的实例最大重试次数,不包括首次调用
ribbon.MaxAutoRetriesNextServer=1
#是否所有操作都重试 GET POST都重试
ribbon.OkToRetryOnAllOperations=true



feign.hystrix.enabled=true

#是否开启服务降级
hystrix.command.default.fallback.enabled=true
#启用/禁用熔断机制
hystrix.command.default.circuitBreaker.enabled=true
#错误百分比。达到或超过这个百分比，熔断器打开。 比如：5秒内有4个请求，2个请求超时或者失败，就会自动开启熔断
hystrix.command.default.circuitBreaker.errorThresholdPercentage=10
#不设置缓冲区，当请求数超过coreSize时直接降级
hystrix.threadpool.userThreadPool.maxQueueSize=-1
#超时时间大于我们的timeout接口返回时间
#hystrix.command.userCommandKey.execution.isolation.thread.timeoutInMilliseconds=1500

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
#hystrix.command.default.execution.timeout.enabled=false
#management.endpoint.hystrix.stream.enabled=true
#spring.cloud.circuitbreaker.hystrix.enabled=true



spring.zipkin.base-url=http://192.168.80.120:39411/
spring.sleuth.sampler.rate=5



